
function BER = qpskApp()

message = 'hello world';
myStruct = myStructInit(message);
[messageBits, berMask] = initMessage(message,myStruct.MessageLength,myStruct.NumberOfMessage);

if coder.target('MATLAB')
  useScopes = true;
  printData = true;
else
  useScopes = false;
  printData = true;
end

% Copyright 2012-2017 The MathWorks, Inc.

%#codegen

persistent qpskTx qpskRx qpskScopes %qpskChan 
coder.extrinsic('createQPSKScopes','runQPSKScopes','releaseQPSKScopes')
if isempty(qpskTx)
    % Initialize the components
    % Create and configure the transmitter System object
    qpskTx = QPSKTransmitter(...
        'UpsamplingFactor',                     myStruct.Interpolation, ...
        'RolloffFactor',                        myStruct.RolloffFactor, ...
        'RaisedCosineFilterSpan',               myStruct.RaisedCosineFilterSpan, ...
        'MessageBits',                          messageBits, ...
        'MessageLength',                        myStruct.MessageLength, ...
        'NumberOfMessage',                      myStruct.NumberOfMessage, ...
        'ScramblerBase',                        myStruct.ScramblerBase, ...
        'ScramblerPolynomial',                  myStruct.ScramblerPolynomial, ...
        'ScramblerInitialConditions',           myStruct.ScramblerInitialConditions);
    
%     % Create and configure the AWGN channel System object
%     qpskChan = QPSKChannel(...
%         'DelayType',                            myStruct.DelayType, ...
%         'DelayStepSize',                        0.0125*myStruct.Interpolation, ...
%         'DelayMaximum',                         2*myStruct.Interpolation, ...
%         'DelayMinimum',                         0.1, ...
%         'RaisedCosineFilterSpan',               myStruct.RaisedCosineFilterSpan, ...
%         'PhaseOffset',                          myStruct.PhaseOffset, ...
%         'SignalPower',                          1/myStruct.Interpolation, ...
%         'InterpolationFactor',                  myStruct.Interpolation, ...
%         'EbNo',                                 myStruct.EbNo, ...
%         'BitsPerSymbol',                        log2(myStruct.ModulationOrder), ...
%         'FrequencyOffset',                      myStruct.FrequencyOffset, ...
%         'SampleRate',                           myStruct.Fs);

    % Create and configure the receiver System object
    qpskRx = QPSKReceiver(...
        'ModulationOrder',                      myStruct.ModulationOrder, ...
        'SampleRate',                           myStruct.Fs, ...
        'DecimationFactor',                     myStruct.Decimation, ...
        'FrameSize',                            myStruct.FrameSize, ...
        'HeaderLength',                         myStruct.HeaderLength, ...
        'NumberOfMessage',                      myStruct.NumberOfMessage, ...
        'PayloadLength',                        myStruct.PayloadLength, ...
        'DesiredPower',                         myStruct.DesiredPower, ...
        'AveragingLength',                      myStruct.AveragingLength, ...
        'MaxPowerGain',                         myStruct.MaxPowerGain, ...
        'RolloffFactor',                        myStruct.RolloffFactor, ...
        'RaisedCosineFilterSpan',               myStruct.RaisedCosineFilterSpan, ...
        'InputSamplesPerSymbol',                myStruct.Interpolation, ...
        'MaximumFrequencyOffset',               myStruct.MaximumFrequencyOffset, ...
        'PostFilterOversampling',               myStruct.Interpolation/myStruct.Decimation, ...
        'PhaseRecoveryLoopBandwidth',           myStruct.PhaseRecoveryLoopBandwidth, ...
        'PhaseRecoveryDampingFactor',           myStruct.PhaseRecoveryDampingFactor, ...
        'TimingRecoveryDampingFactor',          myStruct.TimingRecoveryDampingFactor, ...
        'TimingRecoveryLoopBandwidth',          myStruct.TimingRecoveryLoopBandwidth, ...
        'TimingErrorDetectorGain',              myStruct.TimingErrorDetectorGain, ...
        'PreambleDetectorThreshold',            myStruct.PreambleDetectorThreshold, ...    
        'DescramblerBase',                      myStruct.ScramblerBase, ...
        'DescramblerPolynomial',                myStruct.ScramblerPolynomial, ...
        'DescramblerInitialConditions',         myStruct.ScramblerInitialConditions,...
        'BerMask',                              berMask, ...
        'pMessage',                             message, ...
        'pMessageLength',                       myStruct.MessageLength, ...
        'PrintOption',                          printData);

    if useScopes
        % Create the System object for plotting all the scopes
        sampleRate = myStruct.Rsym*myStruct.Interpolation/myStruct.Decimation;
        qpskScopes = createQPSKScopes(sampleRate);
    end
end

qpskRx.PrintOption = printData;
transmittedSignal = coder.nullcopy(complex(2266,1));


for count = 1:myStruct.TotalFrame
  if coder.target('MATLAB')
    transmittedSignal = qpskTx();                                         % Transmitter
  else
    transmittedSignal(:) = qpskTx();                                         % Transmitter
  end
    
%    rcvdSignal = qpskChan(transmittedSignal, count);                        % AWGN Channel
    rcvdSignal = transmittedSignal;
    [RCRxSignal, timingRecSignal, freqRecSignal, BER] = qpskRx(rcvdSignal); % Receiver
    if useScopes
        runQPSKScopes(qpskScopes, rcvdSignal, RCRxSignal, timingRecSignal, freqRecSignal); % Plots all the scopes
    end
end

if isempty(coder.target)
    release(qpskTx);
%    release(qpskChan);
    release(qpskRx);
end
if useScopes
     releaseQPSKScopes(qpskScopes);
end
